// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication2.Models;

namespace Web_API.Migrations
{
    [DbContext(typeof(PlaceMyBetContext))]
    [Migration("20201203014044_m2")]
    partial class m2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("AplicacionWeb.Models.Apuesta", b =>
                {
                    b.Property<int>("ApuestaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("Cuota")
                        .HasColumnType("double");

                    b.Property<double>("DinieroApostado")
                        .HasColumnType("double");

                    b.Property<int>("EventoId")
                        .HasColumnType("int");

                    b.Property<string>("Fecha")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Mercado")
                        .HasColumnType("int");

                    b.Property<string>("TipoApuesta")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("ApuestaId");

                    b.HasIndex("EventoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Apuestas");

                    b.HasData(
                        new
                        {
                            ApuestaId = 1,
                            Cuota = 1.8999999999999999,
                            DinieroApostado = 100.0,
                            EventoId = 1,
                            Fecha = "2020/02/20",
                            Mercado = 1,
                            TipoApuesta = "Over",
                            UsuarioId = 1
                        },
                        new
                        {
                            ApuestaId = 2,
                            Cuota = 1.8999999999999999,
                            DinieroApostado = 50.0,
                            EventoId = 2,
                            Fecha = "2020/02/20",
                            Mercado = 2,
                            TipoApuesta = "Under",
                            UsuarioId = 1
                        });
                });

            modelBuilder.Entity("AplicacionWeb.Models.Evento", b =>
                {
                    b.Property<int>("EventoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("EquipoLocal")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("EquipoVisitante")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Fecha")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("EventoId");

                    b.ToTable("Eventos");

                    b.HasData(
                        new
                        {
                            EventoId = 1,
                            EquipoLocal = "Valencia",
                            EquipoVisitante = "Español",
                            Fecha = "2020/02/20"
                        },
                        new
                        {
                            EventoId = 2,
                            EquipoLocal = "Madrid",
                            EquipoVisitante = "Barcelona",
                            Fecha = "2020/03/30"
                        });
                });

            modelBuilder.Entity("AplicacionWeb.Models.Mercado", b =>
                {
                    b.Property<int>("MercadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("CuotaOver")
                        .HasColumnType("double");

                    b.Property<double>("CuotaUnder")
                        .HasColumnType("double");

                    b.Property<double>("DineroOver")
                        .HasColumnType("double");

                    b.Property<double>("DineroUnder")
                        .HasColumnType("double");

                    b.Property<int>("EventoId")
                        .HasColumnType("int");

                    b.Property<double>("TipoMercado")
                        .HasColumnType("double");

                    b.HasKey("MercadoId");

                    b.HasIndex("EventoId")
                        .IsUnique();

                    b.ToTable("Mercados");

                    b.HasData(
                        new
                        {
                            MercadoId = 1,
                            CuotaOver = 1.8999999999999999,
                            CuotaUnder = 1.8999999999999999,
                            DineroOver = 100.0,
                            DineroUnder = 100.0,
                            EventoId = 1,
                            TipoMercado = 1.5
                        },
                        new
                        {
                            MercadoId = 2,
                            CuotaOver = 1.8999999999999999,
                            CuotaUnder = 1.8999999999999999,
                            DineroOver = 100.0,
                            DineroUnder = 100.0,
                            EventoId = 2,
                            TipoMercado = 2.5
                        });
                });

            modelBuilder.Entity("AplicacionWeb.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Apellidos")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            UsuarioId = 1,
                            Apellidos = "Salvador",
                            Edad = 19,
                            Nombre = "Jesus"
                        },
                        new
                        {
                            UsuarioId = 2,
                            Apellidos = "Gonzalez",
                            Edad = 20,
                            Nombre = "Pedro"
                        });
                });

            modelBuilder.Entity("Web_API.Models.Cuenta", b =>
                {
                    b.Property<int>("CuentaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("NombreBanco")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<double>("Saldo")
                        .HasColumnType("double");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("CuentaId");

                    b.HasIndex("UsuarioId")
                        .IsUnique();

                    b.ToTable("Cuentas");

                    b.HasData(
                        new
                        {
                            CuentaId = 1,
                            NombreBanco = "Bankia",
                            Saldo = 500.0,
                            UsuarioId = 1
                        },
                        new
                        {
                            CuentaId = 2,
                            NombreBanco = "Bankia",
                            Saldo = 500.0,
                            UsuarioId = 2
                        });
                });

            modelBuilder.Entity("AplicacionWeb.Models.Apuesta", b =>
                {
                    b.HasOne("AplicacionWeb.Models.Evento", "Evento")
                        .WithMany("Apuestas")
                        .HasForeignKey("EventoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AplicacionWeb.Models.Usuario", "Usuario")
                        .WithMany("Apuesta")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AplicacionWeb.Models.Mercado", b =>
                {
                    b.HasOne("AplicacionWeb.Models.Evento", "Evento")
                        .WithOne("Mercado")
                        .HasForeignKey("AplicacionWeb.Models.Mercado", "EventoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Web_API.Models.Cuenta", b =>
                {
                    b.HasOne("AplicacionWeb.Models.Usuario", "Usuario")
                        .WithOne("Cuenta")
                        .HasForeignKey("Web_API.Models.Cuenta", "UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
